package com.cmapp.test;

import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.Writer;
import java.net.HttpURLConnection;
import java.net.URL;

import android.app.IntentService;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.Environment;
import android.util.Log;

public class imgURLintentServiceActivity extends IntentService {
	 private static final String CACHE_FOLDER = "TestAPP";
	 private File cacheDir;
	@Override
	public void onCreate() {
		// TODO Auto-generated method stub
		super.onCreate();
		String tmpLocation= Environment.getExternalStorageDirectory().getPath() +CACHE_FOLDER;
		cacheDir =new File(tmpLocation);
		if(!cacheDir.exists()){
			cacheDir.mkdirs();
		}
	}
	
	public imgURLintentServiceActivity(String name) {
		super(name);
		// TODO Auto-generated constructor stub
	}

	@Override
	protected void onHandleIntent(Intent intent) {
		// TODO Auto-generated method stub
		String intenturl=intent.getExtras().getString("url");
		String location;
		String filename = intenturl.substring(intenturl.lastIndexOf(File.separator)+1);
		File tmp =new File(cacheDir.getPath()+File.separator + filename);
		if(tmp.exists()){
			location =tmp.getAbsolutePath();
			notifyFinish(location,intenturl);
			stopSelf();
			return;
		}
		
		
		try {
			URL url=new URL(intent.getExtras().getString("url"));
		
			HttpURLConnection httpCon =(HttpURLConnection) url.openConnection();
			httpCon.connect();
			if(httpCon.getResponseCode()!=200){
				throw new Exception("Failed to Connect!");
			}
			InputStream is =httpCon.getInputStream();
			FileOutputStream fos = new FileOutputStream(tmp);
            int size = 1024*1024;
            byte[] buf = new byte[size];
            int byteRead;
	            while (((byteRead = is.read(buf)) != -1)) {
	                fos.write(buf, 0, byteRead);
	                //bytesDownloaded += byteRead;
	            }
            /* Convert the Bytes read to a String. */
            fos.flush();
            fos.close();
            is.close();
            location =tmp.getAbsolutePath();
            notifyFinish(location,intenturl);
            
			} catch (Exception e) {
			Log.e("img","Faild to load Img!");
			// TODO: handle exception
		}
	}
		
		

	private void notifyFinish(String location, String intenturl) {
		// TODO Auto-generated method stub
		
	}


}
